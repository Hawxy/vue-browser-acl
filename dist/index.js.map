{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import Acl from 'browser-acl'\nimport { Verb, VerbObject } from 'browser-acl'\nimport { VueConstructor, VNode, DirectiveFunction } from 'vue/types'\nimport { DirectiveBinding } from 'vue/types/options'\nimport VueRouter, { Route } from 'vue-router/types'\n\nimport {\n  AclWithRouter,\n  Behaviour,\n  CompiledOptions,\n  Options,\n  PromiseChain,\n  SetupCallback,\n  User,\n  UserGetter,\n  VueAcl,\n  VueRouterMeta,\n} from '../types'\n\nexport {\n  AclWithRouter,\n  Behaviour,\n  CompiledOptions,\n  Options,\n  PromiseChain,\n  SetupCallback,\n  User,\n  UserGetter,\n  VueRouterMeta,\n} from '../types'\n\nconst VueAcl: VueAcl = {\n  install(\n    Vue: VueConstructor,\n    user: User | UserGetter,\n    aclOrSetupCallback: Acl | SetupCallback | undefined = undefined,\n    options: Options = {},\n  ): void {\n    const userAccessor: Function =\n      typeof user === 'function' ? user : () => user\n\n    /* defaults */\n    const strict = Boolean(options.strict)\n\n    const opt: CompiledOptions = Object.assign(\n      {\n        acl: { strict },\n        aliases: ['role'],\n        assumeGlobal: !strict,\n        caseMode: true,\n        debug: false,\n        directive: 'can',\n        failRoute: '/',\n        helper: true,\n        strict: false,\n      },\n      options,\n    )\n\n    const findCan = findCanWithOptions(opt)\n\n    /* setup acl */\n    let acl: AclWithRouter = new Acl(opt.acl) as AclWithRouter\n    if (typeof aclOrSetupCallback === 'function') {\n      aclOrSetupCallback(acl)\n    } else if (aclOrSetupCallback instanceof Acl) {\n      acl = aclOrSetupCallback\n    }\n\n    /* router init function */\n    acl.router = function (router: VueRouter) {\n      opt.router = router\n\n      const canNavigate = (\n        verb: string,\n        verbObject: string | null,\n        ...otherArgs: any[]\n      ) => {\n        return (\n          (verbObject &&\n            acl.can(userAccessor(), verb, verbObject, ...otherArgs)) ||\n          (!verbObject && !opt.strict)\n        )\n      }\n\n      /* convert 'edit Post' to ['edit', 'Post'] */\n      const aclTuple = (value: string): [string, string | null] => {\n        const [\n          verb,\n          verbObject = opt.assumeGlobal ? Acl.GlobalRule : null,\n        ] = value.split(' ')\n        return [verb, verbObject]\n      }\n\n      /**\n       * chain all can-statements and functions as promises\n       * each can-function must return a promise (in strict\n       * mode at least). To break the chain return a none\n       * true value\n       */\n      const chainCans = (\n        metas: VueRouterMeta[],\n        to: Route,\n        from: Route,\n      ): PromiseChain => {\n        let fail: string | null = null\n        const chain: PromiseChain = metas.reduce((chain, meta) => {\n          return (\n            chain\n              .then((result: any) => {\n                if (result !== true) {\n                  return result\n                }\n\n                if (typeof meta.fail === 'string') {\n                  fail = meta.fail\n                }\n\n                const can = findCan(meta)\n\n                const nextPromise =\n                  typeof can === 'function'\n                    ? can(to, from, canNavigate)\n                    : Promise.resolve(canNavigate(...aclTuple(can)))\n\n                if (opt.strict && !(nextPromise instanceof Promise)) {\n                  throw new Error(\n                    '$route.meta.can must return a promise in strict mode',\n                  )\n                }\n\n                return nextPromise\n              })\n              // convert errors to false\n              .catch((error) => {\n                if (opt.debug) {\n                  console.error(error)\n                }\n                return false\n              })\n          )\n        }, Promise.resolve(true)) as PromiseChain\n        chain.getFail = () => fail\n        return chain\n      }\n\n      router.beforeEach((to: Route, from: Route, next: any) => {\n        const metas = to.matched\n          .filter((route) => route.meta && findCan(route.meta))\n          .map((route) => route.meta)\n\n        const chain = chainCans(metas, to, from)\n\n        chain.then((result) => {\n          if (result === true) {\n            return next()\n          }\n\n          let fail: string | Function | null = chain.getFail() || opt.failRoute\n\n          if (fail === '$from') {\n            fail = from.path\n          }\n\n          next(typeof fail === 'function' ? fail(to, from) : fail)\n        })\n      })\n    }\n\n    /* init router */\n    if (opt.router) {\n      acl.router(opt.router)\n    }\n\n    /* directive update handler */\n    const directiveHandler: DirectiveFunction = function (\n      el: HTMLElement,\n      binding: DirectiveBinding,\n      vnode: VNode,\n    ): void {\n      const behaviour: Behaviour = getBehaviour(binding.modifiers)\n\n      let verb, verbArg, verbObject, params\n      verbArg = binding.arg\n\n      if (Array.isArray(binding.value) && binding.expression.startsWith('[')) {\n        ;[verb, verbObject, params] = binding.modifiers.global\n          ? arrayToGlobalExprTpl(binding)\n          : arrayToExprTpl(binding)\n      } else if (typeof binding.value === 'string') {\n        ;[verb, verbObject, params] = stringToExprTpl(binding, vnode, opt)\n      } else if (verbArg && typeof binding.value === 'object') {\n        verb = verbArg\n        verbObject = binding.value\n        params = []\n      } else if (\n        binding.value === undefined &&\n        !binding.modifiers.global &&\n        opt.assumeGlobal\n      ) {\n        // Fall back to global if no value is provided\n        verb = verbArg\n        verbObject = Acl.GlobalRule\n        params = []\n      }\n\n      if (opt.assumeGlobal && !verbObject) {\n        verbObject = Acl.GlobalRule\n        params = params || []\n        verb = verb || verbArg\n      }\n\n      if (!verb || !verbObject) {\n        throw new Error('Missing verb or verb object')\n      }\n\n      const aclMethod =\n        (binding.modifiers.some && 'some') ||\n        (binding.modifiers.every && 'every') ||\n        'can'\n\n      const ok = acl[aclMethod](userAccessor(), verb, verbObject, ...params)\n      const not = binding.modifiers.not\n\n      const elDisabled: HasDisabledElement | false = supportsDisabled(el)\n      const elReadOnly: HasReadOnlyElement | false = supportsReadOnly(el)\n\n      if (elDisabled) {\n        elDisabled.disabled = false\n      }\n\n      if (elReadOnly) {\n        elReadOnly.readOnly = false\n      }\n\n      if ((ok && not) || (!ok && !not)) {\n        if (behaviour === 'hide') {\n          commentNode(el, vnode)\n        } else if (behaviour === 'disable' && elDisabled) {\n          elDisabled.disabled = true\n        } else if (behaviour === 'readonly' && elReadOnly) {\n          elReadOnly.readOnly = true\n        }\n      }\n    }\n\n    /* set up directive for 'can' and aliases */\n    const directiveNames = [opt.directive, ...opt.aliases]\n    directiveNames.forEach((name) => Vue.directive(name, directiveHandler))\n\n    /* define helpers */\n    if (opt.helper) {\n      const helper = `$${opt.directive}`\n      /* @type AclHelper */\n      Vue.prototype[helper] = function (\n        verb: Verb,\n        verbObject: VerbObject,\n        ...args: any[]\n      ) {\n        return acl.can(userAccessor(), verb, verbObject, ...args)\n      }\n      /* @type AclHelper */\n      Vue.prototype[helper].not = function (\n        verb: Verb,\n        verbObject: VerbObject,\n        ...args: any[]\n      ) {\n        return !acl.can(userAccessor(), verb, verbObject, ...args)\n      }\n      /* @type AclHelperMany */\n      Vue.prototype[helper].every = function (\n        verb: Verb,\n        verbObjects: VerbObject[],\n        ...args: any[]\n      ) {\n        return acl.every(userAccessor(), verb, verbObjects, ...args)\n      }\n      /* @type AclHelperMany */\n      Vue.prototype[helper].some = function (\n        verb: Verb,\n        verbObjects: VerbObject[],\n        ...args: any[]\n      ) {\n        return acl.some(userAccessor(), verb, verbObjects, ...args)\n      }\n    }\n  },\n}\n\nfunction getBehaviour(modifiers: any): Behaviour {\n  if (typeof modifiers.disable !== 'undefined') {\n    return 'disable'\n  }\n  if (typeof modifiers.readonly !== 'undefined') {\n    return 'readonly'\n  }\n  return 'hide'\n}\n\ninterface HasDisabledElement extends HTMLElement {\n  disabled: string | boolean\n}\n\nconst disabledTypes = [\n  HTMLButtonElement,\n  HTMLFieldSetElement,\n  HTMLInputElement,\n  HTMLOptGroupElement,\n  HTMLOptionElement,\n  HTMLSelectElement,\n  HTMLTextAreaElement,\n]\n\nfunction supportsDisabled(el: HTMLElement): HasDisabledElement | false {\n  if (disabledTypes.some((type) => el instanceof type)) {\n    return el as HasDisabledElement\n  }\n  return false\n}\n\ninterface HasReadOnlyElement extends HTMLElement {\n  readOnly: string | boolean\n}\n\nconst readOnlyTypes = [HTMLInputElement, HTMLTextAreaElement]\n\nfunction supportsReadOnly(el: HTMLElement): HasReadOnlyElement | false {\n  if (readOnlyTypes.some((type) => el instanceof type)) {\n    return el as HasReadOnlyElement\n  }\n  return false\n}\n\n/**\n * Create comment node\n *\n * @private\n * @author https://stackoverflow.com/questions/43003976/a-custom-directive-similar-to-v-if-in-vuejs#43543814\n */\nfunction commentNode(el: HTMLElement, vnode: VNode) {\n  const comment = document.createComment(' ')\n\n  Object.defineProperty(comment, 'setAttribute', {\n    value: () => undefined,\n  })\n\n  vnode.text = ' '\n  vnode.elm = comment\n  vnode.isComment = true\n  vnode.tag = undefined\n\n  vnode.data = vnode.data || {}\n  vnode.data.directives = undefined\n\n  if (vnode.componentInstance) {\n    // @ts-ignore\n    vnode.componentInstance.$el = comment\n  }\n\n  if (el.parentNode) {\n    el.parentNode.replaceChild(comment, el)\n  }\n}\n\n/**\n * Return the first property from meta that is 'can' or one of its aliases.\n */\nconst findCanWithOptions = (opt: CompiledOptions) => (\n  meta: VueRouterMeta,\n): string | Function => {\n  return ([opt.directive, ...(opt.aliases || [])] as string[])\n    .map((key: string) => meta[key])\n    .filter(Boolean)\n    .shift()\n}\n\n/**\n * Maps binding.value of type array to expression tuple\n */\nconst arrayToExprTpl = ({ arg, value }: DirectiveBinding) => [\n  arg || value[0],\n  arg ? value[0] : value[1],\n  arg ? value.slice(1) : value.slice(2),\n]\n\n/**\n * Maps binding.value of type array to global expression tuple\n */\nconst arrayToGlobalExprTpl = ({ arg, value }: DirectiveBinding) => [\n  arg || value[0],\n  Acl.GlobalRule,\n  arg ? value : value.slice(1),\n]\n\n/**\n * Maps binding.value of type string to expression tuple\n */\nconst stringToExprTpl = (\n  { arg, value, modifiers }: DirectiveBinding,\n  vnode: VNode,\n  opt: CompiledOptions,\n) => {\n  let [verb, verbObject] = arg ? [arg, value] : value.split(' ')\n\n  if (verbObject && modifiers.global) {\n    throw new Error(\n      'You cannot provide verb object and use global modifier at the same time',\n    )\n  }\n\n  if (\n    typeof verbObject === 'string' &&\n    opt.caseMode &&\n    verbObject[0].match(/[a-z]/) &&\n    typeof vnode.context === 'object'\n  ) {\n    verbObject = vnode.context.$data[verbObject]\n  }\n\n  return [verb, verbObject, []]\n}\n\nexport default VueAcl\n"],"names":["VueAcl","install","Vue","user","aclOrSetupCallback","options","undefined","userAccessor","strict","Boolean","opt","Object","assign","acl","aliases","assumeGlobal","caseMode","debug","directive","failRoute","helper","findCan","findCanWithOptions","Acl","router","canNavigate","verb","verbObject","can","beforeEach","to","from","next","chain","metas","fail","reduce","meta","then","result","nextPromise","Promise","resolve","split","GlobalRule","Error","catch","error","console","getFail","chainCans","matched","filter","route","map","path","directiveHandler","el","binding","vnode","verbArg","params","modifiers","behaviour","disable","readonly","arg","Array","isArray","value","expression","startsWith","global","arrayToGlobalExprTpl","arrayToExprTpl","stringToExprTpl","ok","some","every","not","elDisabled","disabledTypes","type","supportsDisabled","elReadOnly","readOnlyTypes","supportsReadOnly","disabled","readOnly","comment","document","createComment","defineProperty","text","elm","isComment","tag","data","directives","componentInstance","$el","parentNode","replaceChild","commentNode","forEach","name","prototype","verbObjects","HTMLButtonElement","HTMLFieldSetElement","HTMLInputElement","HTMLOptGroupElement","HTMLOptionElement","HTMLSelectElement","HTMLTextAreaElement","key","shift","slice","match","context","$data"],"mappings":"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"}